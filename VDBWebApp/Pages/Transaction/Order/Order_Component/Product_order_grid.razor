@using System.Collections.Generic
@using Models
@using Blazored.LocalStorage

<div class="table-container">
    <div class="table-header-actions">
    </div>
    <table class="table table-striped table-bordered table-hover person-table">
        <thead class="table-header">
            <tr>
                <th>No</th>
                <th>SKU</th>
                <th>Qty</th>
                <th>Price</th>
                <th>Discount</th>
                <th>Subtotal</th>
                <th>Remark</th>
                @if (UserType=="ADMIN" && Status =="NEW")
                {
                    <th>Action</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (productorders != null && productorders.Any())
            {
                int seq = 1;
                @foreach (var productorder in productorders)
                {

                    <tr>
                        <td>@seq</td>
                        <td>@productorder.Item_Name</td>
                        <td>@productorder.QtyNum</td>
                        <td>@productorder.PriceNum.ToString("N2")</td>
                        <td>@productorder.DiscAmount.ToString("N2")</td>
                        <td>@productorder.SubTotalAmount.ToString("N2")</td>
                        <td>@productorder.Remark</td>
                        @if (UserType == "ADMIN" && Status == "NEW")
                        {
                          <td>
                            <div class="d-flex mb-2" style="gap: 10px;">
                            <button class="btn btn-sm btn-outline-primary edit-button" @onclick="() => EditCustomer(productorder)" title="Edit">
                                <img src="images/material/edit.png" alt="Edit" class="edit-icon" />
                            </button>
                                <button class="btn btn-sm btn-outline-primary edit-button" @onclick="() => DeleteCustomer(productorder)" title="Delete">
                                    <img src="images/material/delete.png" alt="delete" class="edit-icon" />
                                </button>
                            </div>
                          </td>
                        }
                    </tr>
                    seq++;                  
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">Data tidak tersedia</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public List<OrderListCustomers> productorders { get; set; } = new();

    [Parameter]
    public EventCallback<OrderListCustomers> OnEditClicked { get; set; } 

    [Parameter]
    public EventCallback<OrderListCustomers> OnDeleteClicked { get; set; }

    [Parameter]
    public string? Status  { get; set; } = "NEW";

    [Parameter]
    public string? UserType { get; set; } = "ADMIN";

    [Inject]
    public ILocalStorageService LocalStorage { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private async Task EditCustomer(OrderListCustomers productorder)
    {
        OnEditClicked.InvokeAsync(productorder);
    }

    private async Task DeleteCustomer(OrderListCustomers productorder)
    {
        OnDeleteClicked.InvokeAsync(productorder);
    }
    
    private bool IsReadOnly => Status?.ToUpper() != "NEW" && UserType?.ToUpper() !="ADMIN";
    private bool IsAdmin => Status?.ToUpper() != "NEW" && UserType?.ToUpper() == "ADMIN";
}

<style>

    .table-container {
        position: relative; /* Untuk memposisikan tombol tambah */
    }

    .table-header-actions {
        position: absolute;
        top: 300;
        right: 0;
        z-index: 200; /* Pastikan di atas tabel */
    }

    .add-button {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.25rem 0.5rem;
        font-size: 0.8rem;
    }

    .add-icon {
        width: 16px;
        height: 16px;
        vertical-align: middle;
    }

    table.person-table.table {
        background-color: var(--brown) !important;
        color: var(--light-brown) !important;
    }

        table.person-table.table th {
            background-color: var(--brown) !important;
            color: var(--warm-white) !important;
        }

        table.person-table.table td {
            background-color: var(--warm-white) !important;
            color: var(--dark-brown) !important;
        }

        table.person-table.table tbody tr:hover {
            background-color: #e6d7c5 !important;
            color: #000 !important;
        }

    .edit-button {
        padding: 0.25rem 0.5rem; /* Lebih kecil padding tombol */
        border: none;
        background-color: var(--dark-brown); /* Transparan background */
        cursor: pointer;
    }

        .edit-button:hover {
            background-color: rgba(0, 0, 0, 0.1); /* Sedikit latar belakang saat dihover */
        }

    .edit-icon {
        width: 16px; /* Ukuran ikon */
        height: 16px;
        vertical-align: middle; /* Pusatkan ikon vertikal */
    }

    /* Jika Anda ingin agar tombol selalu berada di tengah vertikal sel */
    .person-table td {
        vertical-align: middle;
    }

</style>

