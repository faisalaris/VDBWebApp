@using System.Collections.Generic
@using Models
@using Blazored.LocalStorage

<div class="table-container">
    <div class="table-header-actions">
    </div>
    <table class="table table-striped table-bordered table-hover person-table">
        <thead class="table-header">
            <tr
                <th>Action</th>
                <th>Name</th>
                <th>Category</th>
                <th>Payment Note</th>
            </tr>
        </thead>
        <tbody>
            @if (People != null && People.Any())
            {
                @foreach (var person in People)
                {
                    <tr>
                        <td>
                            <button class="btn btn-sm btn-outline-primary edit-button" @onclick="() => EditCustomer(person)" title="Choose">
                                <img src="images/material/edit.png" alt="Edit" class="edit-icon" />
                            </button>
                        </td>
                        <td>@person.PersonName</td>
                        <td>@person.PersonCategory</td>
                        <td>@person.PaymentNote</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">No records found</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>

    .table-container {
        position: relative; /* Untuk memposisikan tombol tambah */
    }

    .table-header-actions {
        position: absolute;
        top: 300;
        right: 0;
        z-index: 200; /* Pastikan di atas tabel */
    }

    .add-button {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.25rem 0.5rem;
        font-size: 0.8rem;
    }

    .add-icon {
        width: 16px;
        height: 16px;
        vertical-align: middle;
    }

    table.person-table.table {
        background-color: var(--brown) !important;
        color: var(--light-brown) !important;
    }

        table.person-table.table th {
            background-color: var(--brown) !important;
            color: var(--warm-white) !important;
        }

        table.person-table.table td {
            background-color: var(--warm-white) !important;
            color: var(--dark-brown) !important;
        }

        table.person-table.table tbody tr:hover {
            background-color: #e6d7c5 !important;
            color: #000 !important;
        }

    .edit-button {
        padding: 0.25rem 0.5rem; /* Lebih kecil padding tombol */
        border: none;
        background-color: var(--dark-brown); /* Transparan background */
        cursor: pointer;
    }

        .edit-button:hover {
            background-color: rgba(0, 0, 0, 0.1); /* Sedikit latar belakang saat dihover */
        }

    .edit-icon {
        width: 16px; /* Ukuran ikon */
        height: 16px;
        vertical-align: middle; /* Pusatkan ikon vertikal */
    }

    /* Jika Anda ingin agar tombol selalu berada di tengah vertikal sel */
    .person-table td {
        vertical-align: middle;
    }

</style>
@code {
    [Parameter]
    public IEnumerable<OrderCustomer> People { get; set; }

    [Inject]
    public ILocalStorageService LocalStorage { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private async Task EditCustomer(OrderCustomer person)
    {
        await LocalStorage.SetItemAsync("selectedOrderCustomerId", person.PersonId.ToString());
        await LocalStorage.SetItemAsync("customerData", person);
        NavigationManager.NavigateTo($"/neworderdetail/");
    }


}
