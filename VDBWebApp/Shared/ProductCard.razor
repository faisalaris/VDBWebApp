@using Blazored.LocalStorage
@using Models

@* Shared/ProductCard.razor *@
<div class="product-card">
    <div class="product-action-container">
        @if (IsPrice)
        {
            <button class="btn btn-primary product-detail-button mb-2" @onclick="ShowProductPriceDetail">Detail Price</button>
        }
        else
        {
            <button class="btn btn-primary product-detail-button mb-2" @onclick="ShowProductDetail">Detail</button>
        }
    </div>
    @if (!string.IsNullOrEmpty(Thumbnail))
    {
        <img src="@Thumbnail" alt="@ItemName" class="product-image" />
    }
    else
    {
        <img src="images/VDBDefault.jpg" alt="@ItemName" class="product-image" />
    }
    <p class="product-sku">SKU: @ItemCode</p>
    <h4 class="product-title">@ItemName</h4>
    <p class="product-price mb-2">WS Price : Rp @Price</p>
    <p class="product-price mb-2">MSRP : Rp @product.msrp</p>
   
    
</div>

@code {
    [Parameter]
    public Product product { get; set; } // Tambahkan parameter product
    
    [Parameter]
    public string ItemCode { get; set; }

    [Parameter]
    public string ItemName { get; set; }

    [Parameter]
    public string Thumbnail { get; set; }

    [Parameter]
    public string Price { get; set; }

    [Parameter]
    public string ItemId { get; set; } // Tambahkan ItemId parameter

    [Parameter]
    public bool IsPrice { get; set; } // Tambahkan ItemId parameter


    [Inject]
    public ILocalStorageService LocalStorage { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private async Task ShowProductDetail()
    {
        await LocalStorage.SetItemAsync("selectedProductId", ItemId.ToString());
        NavigationManager.NavigateTo($"/productdetail/");
    }

    private async Task ShowProductPriceDetail()
    {
        await LocalStorage.SetItemAsync("selectedProductId", ItemId.ToString());
        NavigationManager.NavigateTo($"/productprice/");
    }
}